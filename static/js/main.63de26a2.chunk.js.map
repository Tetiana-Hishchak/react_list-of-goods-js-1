{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","preparedGoods","reverse","sort","good1","good2","localeCompare","length","getPreparedGoods","setSort","field","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"mPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EACI,SADJA,EAEE,OAqCD,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EArCR,SAA0BC,EAA1B,GAA6D,IAA1BL,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,WACtCI,EAAa,YAAOD,GAE1B,OAAKL,GAAaE,EACTI,EAAcC,WAGnBP,GACFM,EAAcE,MAAK,SAACC,EAAOC,GACzB,OAAQV,GACN,KAAMH,EACJ,OAAOK,EACHQ,EAAMC,cAAcF,GACpBA,EAAME,cAAcD,GAC1B,KAAMb,EACJ,OAAIa,EAAME,SAAWH,EAAMG,OAClBV,EACHQ,EAAME,OAASH,EAAMG,OACrBH,EAAMG,OAASF,EAAME,OAGpBV,EACHQ,EAAMC,cAAcF,GACpBA,EAAME,cAAcD,GAE1B,QACE,OAAO,MAKRJ,GAMcO,CACnBjB,EAAiB,CAAEI,YAAWE,eAO1BY,EAAU,SAAAC,GAAK,OAAI,WACvBd,EAAac,KAOf,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYlB,IAAcH,IAE5BsB,QAASL,EAAQjB,GALnB,iCAUA,wBACEoB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYlB,IAAcH,IAE5BsB,QAASL,EAAQjB,GALnB,4BAUA,wBACEoB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAahB,IAEfiB,QAhCW,WACjBhB,GAAeD,IA0BX,sBASEF,GAAaE,IACb,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAjDI,WACZlB,EAAa,IACbE,GAAc,IA4CR,sBAWJ,6BACGC,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCzHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.63de26a2.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport { useState } from 'react';\nimport cn from 'classnames';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD = {\n  LENGTH: 'length',\n  NAME: 'name',\n};\n\nfunction getPreparedGoods(goods, { sortField, isReversed }) {\n  const preparedGoods = [...goods];\n\n  if (!sortField && isReversed) {\n    return preparedGoods.reverse();\n  }\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case (SORT_FIELD.NAME):\n          return isReversed\n            ? good2.localeCompare(good1)\n            : good1.localeCompare(good2);\n        case (SORT_FIELD.LENGTH):\n          if (good2.length !== good1.length) {\n            return isReversed\n              ? good2.length - good1.length\n              : good1.length - good2.length;\n          }\n\n          return isReversed\n            ? good2.localeCompare(good1)\n            : good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, { sortField, isReversed },\n  );\n  const reset = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  const setSort = field => () => {\n    setSortField(field);\n  };\n\n  const onReversed = () => {\n    setIsReversed(!isReversed);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SORT_FIELD.NAME,\n          })}\n          onClick={setSort(SORT_FIELD.NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SORT_FIELD.LENGTH,\n          })}\n          onClick={setSort(SORT_FIELD.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={onReversed}\n        >\n          Reverse\n        </button>\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )\n        }\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}